public class Main {
    public static void main(String[] args) {
        System.out.println("Hello SkyPRO!");

//        ## 1 задача
//
//        Объявите три массива:
//
//        1. Целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.
//                - Подсказка
//
//        ```java
//        //объявление массива из 12-ти элементов, заполненного нулями
//
//        int [] weight = new int [12];
//        ```
//
//        2. Массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его значениями.
//        - Подсказка
//
//        ```java
//        //объявление целочисленного массива, заполненного 12 элементами
//
//        int [] weight = {90, 91, 93, 92, 85, 87, 84, 83, 0, 0, 0, 0};
//        ```
//
//        3. Произвольный массив – тип и количество данных определите сами. Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.
//        - **Критерии оценки**
//        - Целочисленный массив создан с помощью ключевого слова new
//                - Массив с дробными числами создан и сразу заполнен значениями
//        - Создан любой произвольный массив одним из двух способов, рассмотренных в уроке
//
//
//## 2 задача
//
//        Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов, начиная с первого элемента, через запятую. Запятая между последним элементом одного массива и первым элементом следующего не нужна.
//
//        - **Критерии оценки**
//        - В консоль выведены все элементы первого массива в верном порядке через запятую
//                - В консоль выведены все элементы второго массива в верном порядке через запятую
//                - В консоль выведены все элементы третьего массива в верном порядке через запятую
//                - На одной строчке расположены элементы только одного массива
//
//## 3 задача
//
//        Теперь ваша задача – распечатать все элементы всех трех массивов, но начинать нужно не с первого элемента массива, а с последнего. Элементы должны быть распечатаны через запятую, при этом элементы одного массива располагаются на одной строчке, а элементы другого массива – на другой.
//
//        Запятая между последним элементом одного массива и первым элементом следующего не нужна.
//
//        Если во втором задании в консоль у вас вывелся результат
//        1, 2, 3
//
//        1.57, 7.654, 9.986
//
//                *произвольные элементы третьего массива*
//
//                То в третьем задании результат должен быть
//
//        3, 2, 1
//
//        9.986, 7.654, 1.57
//
//                *произвольные элементы третьего массива в обратном порядке*
//
//        - Критерии оценки
//                - В консоль выведены все элементы первого массива в обратном порядке через запятую
//                - В консоль выведены все элементы второго массива в обратном порядке через запятую
//                - В консоль выведены все элементы третьего массива в обратном порядке через запятую
//                - На одной строчке расположены элементы только одного массива
//
//### 4 задача
//
//        Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).
//
//                Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания вам нужно использовать циклы.
//
//                Распечатайте результат преобразования в консоль.
//
//        - Критерии оценки

        //Задача 1.1
        int[] arrey = new int[15];
        arrey[0] = 1;
        arrey[1] = 2;
        arrey[2] = 3;
        //Задача 1.2
        double[] arrey2 = {1.57, 7.654, 9.986};
        //Задача 1.3
        int lengthArrey = 17;  //Длинна массива
        int[] arrey3 = new int[lengthArrey];

        //Задача 2
        int i;
        for (i = 0; i < arrey.length; i++) {
            System.out.print(arrey[i]);
            if (i + 1 < arrey.length) {
                System.out.print(", ");
            }
        }
        System.out.println();
        for (i = 0; i < arrey2.length; i++) {
            System.out.print(arrey2[i]);
            if (i + 1 < arrey2.length) {
                System.out.print(", ");
            }
        }
        System.out.println();
        for (i = 0; i < arrey3.length; i++) {
            arrey3[i] = i + 1;
            System.out.print(arrey3[i]);
            if (i + 1 < arrey3.length) {
                System.out.print(", ");
            }
        }
        System.out.println();
        //Задача 3

        for (i = arrey.length - 1; i >= 0; i--) {
            System.out.print(arrey[i]);
            if (i > 0) {
                System.out.print(", ");
            }
        }
        System.out.println();
        for (i = arrey2.length - 1; i >= 0; i--) {
            System.out.print(arrey2[i]);
            if (i > 0) {
                System.out.print(", ");
            }
        }
        System.out.println();
        for (i = arrey3.length - 1; i >= 0; i--) {
            arrey3[i] = i + 1;
            System.out.print(arrey3[i]);
            if (i > 0) {
                System.out.print(", ");
            }
        }
        System.out.println();

        //Задача 4
        for (i = 0; i < arrey.length; i++) {
            if (arrey[i]%2 != 0){
                arrey[i] = arrey[i] +1;
            }
            System.out.print(arrey[i]);
            if (i + 1 < arrey.length) {
                System.out.print(", ");
            }
        }


    }
}
